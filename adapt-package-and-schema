#!/usr/bin/env node

const argv = require('minimist')(process.argv.slice(2));
const fs = require("fs");
const adapt_json = require("./helper_adapt_json.js").adapt_json;

try {
	var schema = JSON.parse(fs.readFileSync("schema.json"));
	// throw file not found
	// throw json not valid

	// calc variables:
	var description = schema.description;
	if (typeof description !== "string") {
		throw new Error("Description not defined");
	}
	description = description.replace(/\..*/, "");

	var app = process.cwd()
			.replace(/.*\//, "")
			.replace(/^(osiota|er)-app-/, "");

	adapt_json("package.json", {
		name: "osiota-app-"+app,
		license: "MIT",
		author: "Simon Walz and others",
		scripts: {
			doc: 'osiota-dev-doc-jsonschema --schema schema.json --app $npm_package_name'
		},
		repository: {
			type: "git",
			url: function(url) {
				if (typeof url === "string" &&
						url.match(/^https:\/\/(?:github\.com|gitlab\.com)\//)) {
					return url;
				}
				return "https://github.com/osiota/osiota-app-"+app+".git";
			}
		},
		devDependencies: {
			"osiota-dev": function(version) {
				if (typeof version !== "string")
					return "^1.x";
				return version;
			}
		},
		description: description,
	}, {
		spaces: 2,
		simulate: argv.simulate
	});

	adapt_json("schema.json", {
		title: function(title) {
			if (typeof title === "string" &&
					title.match(/^osiota application /)) {
				return title;
			}
			return "osiota application "+app;
		}
	}, {
		simulate: argv.simulate
	});
} catch(err) {
	console.error(err);
}
